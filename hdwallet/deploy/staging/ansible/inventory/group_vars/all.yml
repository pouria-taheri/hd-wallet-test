### Ansible Vars
#Change to true if deployment failed to restore latest backup version
restore: false
#type:manual,none,automatic
#atomatic: cert will be generated by ansible and copied to path
#manual: You need to provide certificates.for automatic copy set ansible.copy to true
#none: No certificate will be available.
certificate:
  type: none

manual:
  cert:
    path: "server.pem"
  key:
    path: "key.pem"
  ca:
    path: "ca.pem"
ansible:
  copy: true

# if set to true ansible will check for app availability on grpc else will check the hdwallet port.
secure_config: true

#Change if you need to change hdwallet dir. config and backup dir will be created accordingly.
hdwallet:
  port: 8580
  address: "0.0.0.0"
  user: "appuser"
  group: "appuser"
  root:
    path: "/data/hdwallet"

# change grpc settings from this section
grpc:
  enabled: true
  port: 5050
  address: "0.0.0.0"
  tlsCertFile: "{{ hdwallet.root.path }}/ssl/cert.pem"
  tlsKeyFile: "{{ hdwallet.root.path }}/ssl/key.pem"
  client:
    grpc:
      enabled: false
      port: 5050
      address: "127.0.0.1"
      cafile: "{{ hdwallet.root.path }}/ssl/ca.pem"
    cli:
      enabled: false

build:
  exec:
    path: "hdwallet"

### App Config Vars###
debug: true
http:
  Address: "{{ hdwallet.address }}:{{ hdwallet.port }}"
  development: false
  logger:
    type: zap
    level: debug
    development: false
    skipPaths:
      - /monitoring/health
      - /monitoring/metrics

logger:
  type: zap
  level: "debug"
  encoding: "console"
  development: false

availableCoins:
  eth:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/eth.yaml"
    password: ""
    networkId: 3   #Ropsten(Testnet):3, Mainnet:1
  btc:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/btc.yaml"
  trx:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/trx.yaml"
    password: ""
  bnb:
    secureConfigPath: "{{ hdwallet.root.path }}/config/bnb.yaml"
    networkId: 0 #TestNetwork:0, ProdNetwork:1, TmpTestNetwork:2, GangesNetwork:3
  doge:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/doge.yaml"
  xlm:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/xlm.yaml"
    password: ""
  ada:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/ada.yaml"
    password:
    walletName: stgWallet
    DBPath: "{{ hdwallet.root.path }}/cardano/wallet/db"
    BackupPath: "{{ hdwallet.root.path }}/cardano/wallet/backup"
  bsc:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/bsc.yaml"
    networkId: 97 #Testnet:97, Mainnet:56
  ltc:
    chainType: simnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/ltc.yaml"
  bch:
    chainType: simnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/bch.yaml"
  eos:
    secureConfigPath: "{{ hdwallet.root.path }}/config/eos.yaml"
    chainId: 2a02a0053e5a8cf73a56ba0fda11e4d92e0238a4a2aa74fccf46d5a910746840 #mainnet:aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906
  matic:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/matic.yaml"
    networkId: 80001 #mainnet:137 testnet:80001
  dot:
    secureConfigPath: "{{ hdwallet.root.path }}/config/dot.yaml"
    networkId: 0 #westend:0, polkadot:1, kusama:2, substrate:3
  xrp:
    secureConfigPath: "{{ hdwallet.root.path }}/config/xrp.yaml"
  pmn:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/pmn.yaml"
  sol:
    secureConfigPath: "{{ hdwallet.root.path }}/config/sol.yaml"
  avax:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/avax.yaml"
    networkId: 43113  #mainet=43114 , testnet=43113
  atom:
    secureConfigPath: "{{ hdwallet.root.path }}/config/atom.yaml"
  ftm:
    chainType: testnet
    secureConfigPath: "{{ hdwallet.root.path }}/config/ftm.yaml"
    networkId: 4002
  near:
    secureConfigPath: "{{ hdwallet.root.path }}/config/near.yaml"

salt: "c309278c44aa43f9bd45c6e9bc203c86"
